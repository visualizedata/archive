{"version":3,"file":"ProjectFilters.501bfbc3.js","sources":["../../app/components/filters/SearchFilter.vue","../../app/components/filters/TagFilter.vue","../../app/components/filters/CategoryFilter.vue","../../app/components/filters/YearFilter.vue"],"sourcesContent":["<template>\n  <div class=\"filter search-filter\">\n    <span>Search</span>\n    <el-input\n      v-model=\"inputValue\"\n      placeholder=\"Type name, title, or description\"\n      clearable\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useFilters } from '@/store/filters.mjs'\n\nconst route = useRoute()\nconst router = useRouter()\nconst filters = useFilters()\n\nconst inputValue = ref('')\nconst query = computed(() => filters.searchQuery || '')\n\nconst updateQuery = (q) => {\n  const parsedQuery = q.length > 0 ? q : undefined\n  router.push({\n    path: '/',\n    query: { ...route.query, search: parsedQuery },\n  })\n}\n\nonMounted(() => {\n  inputValue.value = query.value\n})\n\nwatch(inputValue, () => {\n  if (inputValue.value !== query.value) {\n    updateQuery(inputValue.value)\n  }\n})\n</script>\n","<template>\n  <div class=\"filter search-filter\">\n    <span>Tags</span>\n    <div class=\"flex\">\n      <el-select\n        v-model=\"selectedTags\"\n        class=\"flex-grow\"\n        placeholder=\"Select Tags\"\n        multiple\n        clearable\n        @change=\"onTagChange\"\n      >\n        <el-option\n          v-for=\"([tag, count], index) in tagOptions\"\n          :key=\"tag + count + index\"\n          :value=\"tag\"\n        >\n          {{ tag }}\n          <span\n            :style=\"{\n              fontSize: '0.7rem',\n              opacity: 0.5,\n            }\"\n          >\n            ({{ count }})\n          </span>\n        </el-option>\n      </el-select>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useFilters } from '@/store/filters.mjs'\n\nconst router = useRouter()\nconst route = useRoute()\nconst filters = useFilters()\n\nconst selectedTags = computed(() => filters.activeTags || [])\n\nconst tagOptions = Object.entries(filters.tags).sort((a, b) => {\n  const a_count = a[1]\n  const b_count = b[1]\n\n  return b_count > a_count ? 1 : -1\n})\n\nconst onTagChange = (selectedTags) => {\n  const parsedTags =\n    selectedTags.length > 0 ? selectedTags.join('|') : undefined\n\n  router.push({\n    path: '/',\n    query: { ...route.query, tags: parsedTags },\n  })\n}\n</script>\n","<template>\n  <div class=\"filter search-filter\">\n    <div class=\"label\">Category</div>\n\n    <div class=\"flex\">\n      <el-select\n        v-model=\"selectedCategories\"\n        class=\"flex-grow\"\n        placeholder=\"Select Category\"\n        clearable\n        @change=\"onTagChange\"\n      >\n        <el-option\n          v-for=\"([tag, count], index) in options\"\n          :key=\"tag + count + index\"\n          :label=\"translation(tag)\"\n          :value=\"tag\"\n        >\n          {{ translation(tag) }}\n          <span\n            :style=\"{\n              fontSize: '0.7rem',\n              opacity: 0.5,\n            }\"\n          >\n            ({{ count }})\n          </span>\n        </el-option>\n      </el-select>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useFilters } from '@/store/filters.mjs'\n\nconst router = useRouter()\nconst route = useRoute()\nconst filters = useFilters()\n\nconst selectedCategories = computed(() => filters.activeCategories || [])\n\nconst options = Object.entries(filters.categories).sort((a, b) => {\n  const a_count = a[1]\n  const b_count = b[1]\n\n  return b_count > a_count ? 1 : -1\n})\n\nconst translation = (str) => {\n  switch (str) {\n    case 'thesis': {\n      return 'Thesis'\n    }\n    case 'ms1': {\n      return 'Major Studio'\n    }\n    default: {\n      return str\n    }\n  }\n}\n\nconst onTagChange = (selectedCategories) => {\n  const parsedCategories =\n    selectedCategories.length > 0\n      ? [selectedCategories].join('|')\n      : undefined\n\n  router.push({\n    path: '/',\n    query: { ...route.query, categories: parsedCategories },\n  })\n}\n</script>\n","<template>\n  <div class=\"filter search-filter\">\n    <div class=\"label\">Years</div>\n    <div class=\"flex\">\n      <el-select\n        v-model=\"selectedYears\"\n        class=\"flex-grow\"\n        placeholder=\"Select Years\"\n        multiple\n        clearable\n        @change=\"onTagChange\"\n      >\n        <el-option\n          v-for=\"([tag, count], index) in options\"\n          :key=\"tag + count + index\"\n          :value=\"tag\"\n        >\n          {{ tag }}\n          <span\n            :style=\"{\n              fontSize: '0.7rem',\n              opacity: 0.5,\n            }\"\n          >\n            ({{ count }})\n          </span>\n        </el-option>\n      </el-select>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useFilters } from '@/store/filters.mjs'\n\nconst router = useRouter()\nconst route = useRoute()\nconst filters = useFilters()\n\nconst selectedYears = computed(() => filters.activeYears || [])\n\nconst options = Object.entries(filters.years).sort((a, b) => {\n  const a_value = a[0]\n  const b_value = b[0]\n\n  return b_value > a_value ? 1 : -1\n})\n\nconst onTagChange = (selectedYears) => {\n  const parsedYears =\n    selectedYears.length > 0 ? selectedYears.join('|') : undefined\n\n  router.push({\n    path: '/',\n    query: { ...route.query, years: parsedYears },\n  })\n}\n</script>\n"],"names":["route","useRoute","router","useRouter","filters","useFilters","inputValue","ref","query","computed","updateQuery","q","parsedQuery","onMounted","watch","selectedTags","tagOptions","a","b","a_count","onTagChange","parsedTags","selectedCategories","options","translation","str","parsedCategories","selectedYears","a_value","parsedYears"],"mappings":"gcAgBA,MAAAA,EAAAC,EAAA,EACAC,EAAAC,EAAA,EACAC,EAAAC,EAAA,EAEAC,EAAAC,EAAA,EAAA,EACAC,EAAAC,EAAA,IAAAL,EAAA,aAAA,EAAA,EAEAM,EAAAC,GAAA,CACA,MAAAC,EAAAD,EAAA,OAAA,EAAAA,EAAA,OACAT,EAAA,KAAA,CACA,KAAA,IACA,MAAA,CAAA,GAAAF,EAAA,MAAA,OAAAY,CAAA,CACA,CAAA,CACA,EAEA,OAAAC,EAAA,IAAA,CACAP,EAAA,MAAAE,EAAA,KACA,CAAA,EAEAM,EAAAR,EAAA,IAAA,CACAA,EAAA,QAAAE,EAAA,OACAE,EAAAJ,EAAA,KAAA,CAEA,CAAA,+TCFA,MAAAJ,EAAAC,EAAA,EACAH,EAAAC,EAAA,EACAG,EAAAC,EAAA,EAEAU,EAAAN,EAAA,IAAAL,EAAA,YAAA,CAAA,CAAA,EAEAY,EAAA,OAAA,QAAAZ,EAAA,IAAA,EAAA,KAAA,CAAAa,EAAAC,IAAA,CACA,MAAAC,EAAAF,EAAA,GAGA,OAFAC,EAAA,GAEAC,EAAA,EAAA,EACA,CAAA,EAEAC,EAAAL,GAAA,CACA,MAAAM,EACAN,EAAA,OAAA,EAAAA,EAAA,KAAA,GAAA,EAAA,OAEAb,EAAA,KAAA,CACA,KAAA,IACA,MAAA,CAAA,GAAAF,EAAA,MAAA,KAAAqB,CAAA,CACA,CAAA,CACA,ilBCpBA,MAAAnB,EAAAC,EAAA,EACAH,EAAAC,EAAA,EACAG,EAAAC,EAAA,EAEAiB,EAAAb,EAAA,IAAAL,EAAA,kBAAA,CAAA,CAAA,EAEAmB,EAAA,OAAA,QAAAnB,EAAA,UAAA,EAAA,KAAA,CAAAa,EAAAC,IAAA,CACA,MAAAC,EAAAF,EAAA,GAGA,OAFAC,EAAA,GAEAC,EAAA,EAAA,EACA,CAAA,EAEAK,EAAAC,GAAA,CACA,OAAAA,EAAA,CACA,IAAA,SACA,MAAA,SAEA,IAAA,MACA,MAAA,eAEA,QACA,OAAAA,CAEA,CACA,EAEAL,EAAAE,GAAA,CACA,MAAAI,EACAJ,EAAA,OAAA,EACA,CAAAA,CAAA,EAAA,KAAA,GAAA,EACA,OAEApB,EAAA,KAAA,CACA,KAAA,IACA,MAAA,CAAA,GAAAF,EAAA,MAAA,WAAA0B,CAAA,CACA,CAAA,CACA,wlBCtCA,MAAAxB,EAAAC,EAAA,EACAH,EAAAC,EAAA,EACAG,EAAAC,EAAA,EAEAsB,EAAAlB,EAAA,IAAAL,EAAA,aAAA,CAAA,CAAA,EAEAmB,EAAA,OAAA,QAAAnB,EAAA,KAAA,EAAA,KAAA,CAAAa,EAAAC,IAAA,CACA,MAAAU,EAAAX,EAAA,GAGA,OAFAC,EAAA,GAEAU,EAAA,EAAA,EACA,CAAA,EAEAR,EAAAO,GAAA,CACA,MAAAE,EACAF,EAAA,OAAA,EAAAA,EAAA,KAAA,GAAA,EAAA,OAEAzB,EAAA,KAAA,CACA,KAAA,IACA,MAAA,CAAA,GAAAF,EAAA,MAAA,MAAA6B,CAAA,CACA,CAAA,CACA"}